/*!
@~chinese
@ingroup dtkio
@file denumerator.h

@class Dtk::IO::DEnumerator denumerator.h
@brief 允许您对一组进行操作DFiles

@fn DEnumerator::DEnumerator(const QUrl &url);
@brief 构造函数, 通过 info 构造一个新的 DOpticalDiscInfo 对象
@param[in] url 原始对象

@fn DTK_CORE_NAMESPACE::DExpected< QUrl > DEnumerator::url () const
@brief 获取当前对象的url
@return 当前对象的url

@fn DTK_CORE_NAMESPACE::DExpected< void > DEnumerator::setNameFilters (const QStringList &nameFilters)
@brief 设置名字过滤器
@param[in] nameFilters 名字过滤器

@fn DTK_CORE_NAMESPACE::DExpected< void > DEnumerator::setDirFilters (DirFilters dirFilters)
@brief 设置目录过滤器
@param[in] dirFilters 目录过滤器

@fn DTK_CORE_NAMESPACE::DExpected< void > DEnumerator::setIteratorFlags (IteratorFlags flags)
@brief 设置迭代器标志
@param[in] flags 迭代器标志

@fn DTK_CORE_NAMESPACE::DExpected< QStringList > DEnumerator::nameFilters () const
@brief 获取名字过滤器
@return nameFilters 名字过滤器

@fn DTK_CORE_NAMESPACE::DExpected< DirFilters > DEnumerator::dirFilters () const
@brief 获取目录过滤器
@return  dirFilters 目录过滤器

@fn DTK_CORE_NAMESPACE::DExpected< IteratorFlags > DEnumerator::iteratorFlags () const
@brief 获取迭代器标志
@return flags 迭代器标志

@fn DTK_CORE_NAMESPACE::DExpected< void > DEnumerator::setTimeout (quint64 timeout)
@brief 设置超时时间
@param[in] timeout 超时时间

@fn DTK_CORE_NAMESPACE::DExpected< quint64 > DEnumerator::timeout () const
@brief 获取超时时间
@return 超时时间

@fn DTK_CORE_NAMESPACE::DExpected< bool > DEnumerator::createEnumerator ()
@brief 创建枚举器
@return 成功返回 true, 反之为 DError 对象, 可获取失败原因

@fn DFileFuture * DEnumerator::createEnumeratorAsync (int ioPriority, QObject *parent=nullptr)
@brief 异步创建枚举器
@param[in] ioPriority io优先级
@param[in] parent 父类
@return DFileFuture* 对象

@fn DTK_CORE_NAMESPACE::DExpected< bool > DEnumerator::hasNext () const
@brief 是否迭代完毕
@return 成功返回 true, 反之为 DError 对象, 可获取失败原因

@fn DTK_CORE_NAMESPACE::DExpected< QUrl > DEnumerator::next () const
@brief  先返回游标指向的下一个元素，游标再移到该位置
@return 当前对象的引用

@fn DTK_CORE_NAMESPACE::DExpected< quint64 > DEnumerator::fileCount ()
@brief 获取文件的数量
@return 文件的数量

@fn DFileInfo * DEnumerator::createFileInfo (QObject *parent=nullptr) const
@brief 创建DFileInfo对象
@param[in] parent 父类
@return 返回DFileInfo对象

@fn DTK_CORE_NAMESPACE::DError DEnumerator::lastError () const
@brief 返回最新错误
@return DError 对象, 可获取失败原因

*/
